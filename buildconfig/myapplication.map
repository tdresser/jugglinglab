alternatives.Color -> alternatives.Color:
    int value -> value
    alternatives.Color white -> white
    alternatives.Color lightGray -> lightGray
    alternatives.Color gray -> gray
    alternatives.Color darkGray -> darkGray
    alternatives.Color black -> black
    alternatives.Color red -> red
    alternatives.Color pink -> pink
    alternatives.Color orange -> orange
    alternatives.Color yellow -> yellow
    alternatives.Color green -> green
    alternatives.Color magenta -> magenta
    alternatives.Color cyan -> cyan
    alternatives.Color blue -> blue
    void <init>(int,int,int) -> <init>
    void <init>(int,int,int,int) -> <init>
    void <clinit>() -> <clinit>
jugglinglab.JugglingLab -> jugglinglab.JugglingLab:
    void <init>() -> <init>
    void main(java.lang.String[]) -> main
jugglinglab.curve.Curve -> jugglinglab.curve.Curve:
    int numpoints -> numpoints
    double[] times -> times
    jugglinglab.util.Coordinate[] positions -> positions
    jugglinglab.util.Coordinate[] velocities -> velocities
    void <init>() -> <init>
    void calcCurve() -> calcCurve
    void getCoordinate(double,jugglinglab.util.Coordinate) -> getCoordinate
    jugglinglab.util.Coordinate getMax2(double,double) -> getMax2
    jugglinglab.util.Coordinate getMin2(double,double) -> getMin2
    void setCurve(double[],jugglinglab.util.Coordinate[],jugglinglab.util.Coordinate[]) -> setCurve
    double getStartTime() -> getStartTime
    double getEndTime() -> getEndTime
    jugglinglab.util.Coordinate getMax(double,double) -> getMax
    jugglinglab.util.Coordinate getMin(double,double) -> getMin
    jugglinglab.util.Coordinate check(jugglinglab.util.Coordinate,double,boolean) -> check
jugglinglab.curve.SplineCurve -> jugglinglab.curve.SplineCurve:
    int n -> n
    double[][] a -> a
    double[][] b -> b
    double[][] c -> c
    double[][] d -> d
    void <init>() -> <init>
    void calcCurve() -> calcCurve
    void findvels_edges_known(int,double[],jugglinglab.util.Coordinate[],jugglinglab.util.Coordinate[]) -> findvels_edges_known
    void findvels_edges_unknown(int,double[],jugglinglab.util.Coordinate[],jugglinglab.util.Coordinate[]) -> findvels_edges_unknown
    void tridag(double[],double[],double[],double[],double[],int) -> tridag
    void getCoordinate(double,jugglinglab.util.Coordinate) -> getCoordinate
    jugglinglab.util.Coordinate getMax2(double,double) -> getMax2
    jugglinglab.util.Coordinate getMin2(double,double) -> getMin2
jugglinglab.jml.EventImages -> jugglinglab.jml.EventImages:
    jugglinglab.jml.JMLPattern pat -> pat
    int numjugglers -> numjugglers
    int numpaths -> numpaths
    double looptime -> looptime
    jugglinglab.util.Permutation loopperm -> loopperm
    jugglinglab.jml.JMLEvent ev -> ev
    int evjuggler -> evjuggler
    int evhand -> evhand
    int evtransitions -> evtransitions
    double evtime -> evtime
    jugglinglab.util.Permutation[][][] ea -> ea
    int numentries -> numentries
    int[] transitiontype -> transitiontype
    int currentloop -> currentloop
    int currentj -> currentj
    int currenth -> currenth
    int currententry -> currententry
    void <init>(jugglinglab.jml.JMLPattern,jugglinglab.jml.JMLEvent) -> <init>
    jugglinglab.jml.JMLEvent getNext() -> getNext
    jugglinglab.jml.JMLEvent getPrevious() -> getPrevious
    jugglinglab.jml.JMLEvent makeEvent() -> makeEvent
    void resetPosition() -> resetPosition
    boolean hasJMLTransitionForHand(int,int) -> hasJMLTransitionForHand
    boolean hasVDJMLTransitionForHand(int,int) -> hasVDJMLTransitionForHand
    boolean hasJMLTransitionForPath(int) -> hasJMLTransitionForPath
    boolean hasVDJMLTransitionForPath(int) -> hasVDJMLTransitionForPath
    void calcarray() -> calcarray
jugglinglab.jml.HandLink -> jugglinglab.jml.HandLink:
    int jugglernum -> jugglernum
    int handnum -> handnum
    jugglinglab.jml.JMLEvent startevent -> startevent
    jugglinglab.jml.JMLEvent endevent -> endevent
    jugglinglab.jml.VelocityRef startvelref -> startvelref
    jugglinglab.jml.VelocityRef endvelref -> endvelref
    jugglinglab.curve.Curve hp -> hp
    boolean ismaster -> ismaster
    jugglinglab.jml.HandLink[] duplicates -> duplicates
    jugglinglab.jml.HandLink master -> master
    void <init>(int,int,jugglinglab.jml.JMLEvent,jugglinglab.jml.JMLEvent) -> <init>
    int index(int) -> index
    jugglinglab.jml.JMLEvent getStartEvent() -> getStartEvent
    jugglinglab.jml.JMLEvent getEndEvent() -> getEndEvent
    jugglinglab.jml.VelocityRef getStartVelocityRef() -> getStartVelocityRef
    void setStartVelocityRef(jugglinglab.jml.VelocityRef) -> setStartVelocityRef
    jugglinglab.jml.VelocityRef getEndVelocityRef() -> getEndVelocityRef
    void setEndVelocityRef(jugglinglab.jml.VelocityRef) -> setEndVelocityRef
    void setHandCurve(jugglinglab.curve.Curve) -> setHandCurve
    jugglinglab.curve.Curve getHandCurve() -> getHandCurve
    java.lang.String toString() -> toString
jugglinglab.jml.JMLDefs -> jugglinglab.jml.a:
    java.lang.String[] jmlprefix -> a
    java.lang.String[] jmlsuffix -> b
    void <clinit>() -> <clinit>
jugglinglab.jml.JMLEvent -> jugglinglab.jml.JMLEvent:
    double x -> x
    double y -> y
    double z -> z
    double gx -> gx
    double gy -> gy
    double gz -> gz
    boolean globalvalid -> globalvalid
    double t -> t
    int juggler -> juggler
    int hand -> hand
    java.util.ArrayList transitions -> transitions
    int delay -> delay
    int delayunits -> delayunits
    jugglinglab.util.Permutation pathpermfrommaster -> pathpermfrommaster
    jugglinglab.jml.JMLEvent master -> master
    boolean calcpos -> calcpos
    jugglinglab.jml.JMLEvent prev -> prev
    jugglinglab.jml.JMLEvent next -> next
    void <init>() -> <init>
    jugglinglab.util.Coordinate getLocalCoordinate() -> getLocalCoordinate
    void setLocalCoordinate(jugglinglab.util.Coordinate) -> setLocalCoordinate
    jugglinglab.util.Coordinate getGlobalCoordinate() -> getGlobalCoordinate
    void setGlobalCoordinate(jugglinglab.util.Coordinate) -> setGlobalCoordinate
    double getT() -> getT
    void setT(double) -> setT
    int getHand() -> getHand
    void setHand(int,int) -> setHand
    int getJuggler() -> getJuggler
    int getNumberOfTransitions() -> getNumberOfTransitions
    jugglinglab.jml.JMLTransition getTransition(int) -> getTransition
    void addTransition(jugglinglab.jml.JMLTransition) -> addTransition
    boolean isMaster() -> isMaster
    jugglinglab.jml.JMLEvent getMaster() -> getMaster
    void setMaster(jugglinglab.jml.JMLEvent) -> setMaster
    jugglinglab.jml.JMLEvent getPrevious() -> getPrevious
    void setPrevious(jugglinglab.jml.JMLEvent) -> setPrevious
    jugglinglab.jml.JMLEvent getNext() -> getNext
    void setNext(jugglinglab.jml.JMLEvent) -> setNext
    void setPathPermFromMaster(jugglinglab.util.Permutation) -> setPathPermFromMaster
    boolean isDelayOf(jugglinglab.jml.JMLEvent) -> isDelayOf
    jugglinglab.jml.JMLTransition getPathTransition(int,int) -> getPathTransition
    jugglinglab.jml.JMLEvent duplicate(int,int) -> duplicate
    void writeJML(java.io.PrintWriter) -> writeJML
    java.lang.String toString() -> toString
jugglinglab.jml.JMLNode -> jugglinglab.jml.b:
    java.lang.String xmlescape(java.lang.String) -> a
jugglinglab.jml.JMLPattern -> jugglinglab.jml.JMLPattern:
    java.lang.String version -> version
    java.lang.String title -> title
    java.lang.String info -> info
    java.util.ArrayList tags -> tags
    int numjugglers -> numjugglers
    int numpaths -> numpaths
    java.util.ArrayList props -> props
    int[] propassignment -> propassignment
    java.lang.String base_pattern_notation -> base_pattern_notation
    java.lang.String base_pattern_config -> base_pattern_config
    boolean base_pattern_hashcode_valid -> base_pattern_hashcode_valid
    boolean[] hasVDPathJMLTransition -> hasVDPathJMLTransition
    boolean[][] hasVDHandJMLTransition -> hasVDHandJMLTransition
    java.util.ArrayList symmetries -> symmetries
    jugglinglab.jml.JMLEvent eventlist -> eventlist
    jugglinglab.jml.JMLPosition positionlist -> positionlist
    java.util.ArrayList pathlinks -> pathlinks
    java.util.ArrayList handlinks -> handlinks
    jugglinglab.curve.Curve[] jugglercurve -> jugglercurve
    jugglinglab.curve.Curve[] jugglerangle -> jugglerangle
    java.lang.String loadingversion -> loadingversion
    boolean laidout -> laidout
    boolean valid -> valid
    void <init>() -> <init>
    void setTitle(java.lang.String) -> setTitle
    void setNumberOfJugglers(int) -> setNumberOfJugglers
    void setNumberOfPaths(int) -> setNumberOfPaths
    void addProp(jugglinglab.jml.PropDef) -> addProp
    void setPropAssignments(int[]) -> setPropAssignments
    void addSymmetry(jugglinglab.jml.JMLSymmetry) -> addSymmetry
    void addEvent(jugglinglab.jml.JMLEvent) -> addEvent
    void removeEvent(jugglinglab.jml.JMLEvent) -> removeEvent
    jugglinglab.jml.JMLEvent getEventList() -> getEventList
    java.util.ArrayList getPathLinks() -> getPathLinks
    void addPosition(jugglinglab.jml.JMLPosition) -> addPosition
    jugglinglab.jml.JMLPosition getPositionList() -> getPositionList
    jugglinglab.jml.JMLPattern fromBasePattern(java.lang.String,java.lang.String) -> fromBasePattern
    void scaleTime(double) -> scaleTime
    double scaleTimeToFitThrows(double) -> scaleTimeToFitThrows
    jugglinglab.jml.JMLPattern layoutPattern() -> layoutPattern
    void setNeedsLayout() -> setNeedsLayout
    void buildEventList() -> buildEventList
    void findMasterEvents() -> findMasterEvents
    void findPositions() -> findPositions
    void gotoGlobalCoordinates() -> gotoGlobalCoordinates
    void buildLinkLists() -> buildLinkLists
    void layoutHandPaths() -> layoutHandPaths
    int getNumberOfJugglers() -> getNumberOfJugglers
    int getNumberOfPaths() -> getNumberOfPaths
    int getNumberOfProps() -> getNumberOfProps
    int getPropAssignment(int) -> getPropAssignment
    int getNumberOfSymmetries() -> getNumberOfSymmetries
    jugglinglab.jml.JMLSymmetry getSymmetry(int) -> getSymmetry
    double getLoopStartTime() -> getLoopStartTime
    double getLoopEndTime() -> getLoopEndTime
    void getJugglerPosition(int,double,jugglinglab.util.Coordinate) -> getJugglerPosition
    double getJugglerAngle(int,double) -> getJugglerAngle
    jugglinglab.util.Coordinate convertLocalToGlobal(jugglinglab.util.Coordinate,int,double) -> convertLocalToGlobal
    void getHandCoordinate(int,int,double,jugglinglab.util.Coordinate) -> getHandCoordinate
    jugglinglab.util.Permutation getPathPermutation() -> getPathPermutation
    void writeJML(java.io.Writer,boolean,boolean) -> writeJML
    java.lang.String toString() -> toString
jugglinglab.jml.JMLPosition -> jugglinglab.jml.c:
    double x -> a
    double y -> b
    double z -> c
    double t -> d
    double angle -> e
    int juggler -> f
    jugglinglab.jml.JMLPosition prev -> g
    jugglinglab.jml.JMLPosition next -> h
    void <init>() -> <init>
    jugglinglab.util.Coordinate getCoordinate() -> a
    void setCoordinate(jugglinglab.util.Coordinate) -> a
    double getAngle() -> b
    void setAngle(double) -> a
    double getT() -> c
    void setT(double) -> b
    int getJuggler() -> d
    void setJuggler(int) -> a
    jugglinglab.jml.JMLPosition getPrevious() -> e
    void setPrevious(jugglinglab.jml.JMLPosition) -> a
    jugglinglab.jml.JMLPosition getNext() -> f
    void setNext(jugglinglab.jml.JMLPosition) -> b
jugglinglab.jml.JMLSymmetry -> jugglinglab.jml.JMLSymmetry:
    int type -> type
    int numjugglers -> numjugglers
    int numpaths -> numpaths
    jugglinglab.util.Permutation jugglerperm -> jugglerperm
    jugglinglab.util.Permutation pathperm -> pathperm
    double delay -> delay
    void <init>() -> <init>
    void <init>(int,int,java.lang.String,int,java.lang.String,double) -> <init>
    int getType() -> getType
    void setType(int) -> setType
    jugglinglab.util.Permutation getJugglerPerm() -> getJugglerPerm
    void setJugglerPerm(int,java.lang.String) -> setJugglerPerm
    jugglinglab.util.Permutation getPathPerm() -> getPathPerm
    void setPathPerm(int,java.lang.String) -> setPathPerm
    double getDelay() -> getDelay
    void setDelay(double) -> setDelay
    void writeJML(java.io.PrintWriter) -> writeJML
jugglinglab.jml.JMLTransition -> jugglinglab.jml.JMLTransition:
    int path -> path
    java.lang.String type -> type
    java.lang.String mod -> mod
    jugglinglab.jml.PathLink ipl -> ipl
    jugglinglab.jml.PathLink opl -> opl
    int transitiontype -> transitiontype
    void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    int getType() -> getType
    int getPath() -> getPath
    void setPath(int) -> setPath
    java.lang.String getThrowType() -> getThrowType
    java.lang.String getMod() -> getMod
    void setIncomingPathLink(jugglinglab.jml.PathLink) -> setIncomingPathLink
    jugglinglab.jml.PathLink getIncomingPathLink() -> getIncomingPathLink
    void setOutgoingPathLink(jugglinglab.jml.PathLink) -> setOutgoingPathLink
    jugglinglab.jml.PathLink getOutgoingPathLink() -> getOutgoingPathLink
    jugglinglab.jml.JMLTransition duplicate() -> duplicate
    void writeJML(java.io.PrintWriter) -> writeJML
jugglinglab.jml.PathLink -> jugglinglab.jml.PathLink:
    int pathnum -> pathnum
    jugglinglab.jml.JMLEvent startevent -> startevent
    jugglinglab.jml.JMLEvent endevent -> endevent
    java.lang.String throwtype -> throwtype
    java.lang.String mod -> mod
    jugglinglab.path.Path proppath -> proppath
    boolean inhand -> inhand
    int juggler -> juggler
    int hand -> hand
    void <init>(int,jugglinglab.jml.JMLEvent,jugglinglab.jml.JMLEvent) -> <init>
    void setThrow(java.lang.String,java.lang.String) -> setThrow
    void setInHand(int,int) -> setInHand
    jugglinglab.path.Path getPath() -> getPath
    java.lang.String toString() -> toString
jugglinglab.jml.PropDef -> jugglinglab.jml.PropDef:
    java.lang.String proptype -> proptype
    java.lang.String mod -> mod
    jugglinglab.prop.Prop prop -> prop
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getMod() -> getMod
    void setMod(java.lang.String) -> setMod
    void layoutProp() -> layoutProp
    void writeJML(java.io.PrintWriter) -> writeJML
jugglinglab.jml.VelocityRef -> jugglinglab.jml.VelocityRef:
    int VR_THROW -> VR_THROW
    int VR_CATCH -> VR_CATCH
    int VR_SOFTCATCH -> VR_SOFTCATCH
    jugglinglab.path.Path pp -> pp
    int src -> src
    void <init>(jugglinglab.path.Path,int) -> <init>
    jugglinglab.util.Coordinate getVelocity() -> getVelocity
    int getSource() -> getSource
    void <clinit>() -> <clinit>
jugglinglab.notation.MHNBody -> jugglinglab.notation.a:
    int jugglers -> a
    int[] size -> b
    int[][] coords -> c
    double[][][][] bodypath -> d
    void <init>(java.lang.String) -> <init>
    int getNumberOfJugglers() -> a
    int getPeriod(int) -> a
    int getNumberOfPositions(int,int) -> a
    jugglinglab.jml.JMLPosition getPosition(int,int,int) -> a
jugglinglab.notation.MHNHands -> jugglinglab.notation.b:
    int jugglers -> a
    int[] size -> b
    int[][] coords -> c
    int[][] catches -> d
    double[][][][] handpath -> e
    void <init>(java.lang.String) -> <init>
    int getPeriod(int) -> a
    int getNumberOfCoordinates(int,int) -> a
    int getCatchIndex(int,int) -> b
    jugglinglab.util.Coordinate getCoordinate(int,int,int) -> a
jugglinglab.notation.MHNPattern -> jugglinglab.notation.MHNPattern:
    double bps_default -> bps_default
    double dwell_default -> dwell_default
    double gravity_default -> gravity_default
    double propdiam_default -> propdiam_default
    double bouncefrac_default -> bouncefrac_default
    double squeezebeats_default -> squeezebeats_default
    java.lang.String prop_default -> prop_default
    boolean hold_default -> hold_default
    boolean dwellmax_default -> dwellmax_default
    java.lang.String config -> config
    java.lang.String pattern -> pattern
    double bps_set -> bps_set
    double dwell -> dwell
    double gravity -> gravity
    double propdiam -> propdiam
    double bouncefrac -> bouncefrac
    double squeezebeats -> squeezebeats
    java.lang.String prop -> prop
    java.lang.String[] color -> color
    java.lang.String title -> title
    java.lang.String hss -> hss
    boolean hold -> hold
    boolean dwellmax -> dwellmax
    java.lang.String handspec -> handspec
    double[] dwellarray -> dwellarray
    int numjugglers -> numjugglers
    int numpaths -> numpaths
    int period -> period
    int max_occupancy -> max_occupancy
    jugglinglab.notation.MHNThrow[][][][] th -> th
    jugglinglab.notation.MHNHands hands -> hands
    jugglinglab.notation.MHNBody bodies -> bodies
    int max_throw -> max_throw
    int indexes -> indexes
    java.util.ArrayList symmetry -> symmetry
    double bps -> bps
    double[] samethrowx -> samethrowx
    double[] crossingthrowx -> crossingthrowx
    double[] catchx -> catchx
    double BEATS_ONE_THROW_EARLY -> BEATS_ONE_THROW_EARLY
    double BEATS_AIRTIME_MIN -> BEATS_AIRTIME_MIN
    double BEATS_THROW_CATCH_MIN -> BEATS_THROW_CATCH_MIN
    double BEATS_CATCH_THROW_MIN -> BEATS_CATCH_THROW_MIN
    double SECS_EVENT_GAP_MAX -> SECS_EVENT_GAP_MAX
    double[] throwspersec -> throwspersec
    void <init>() -> <init>
    int getNumberOfJugglers() -> getNumberOfJugglers
    int getNumberOfPaths() -> getNumberOfPaths
    int getPeriod() -> getPeriod
    int getIndexes() -> getIndexes
    int getMaxOccupancy() -> getMaxOccupancy
    jugglinglab.notation.MHNThrow[][][][] getThrows() -> getThrows
    int getNumberOfSymmetries() -> getNumberOfSymmetries
    java.lang.String getPropName() -> getPropName
    void addSymmetry(jugglinglab.notation.MHNSymmetry) -> addSymmetry
    jugglinglab.notation.MHNSymmetry getSymmetry(int) -> getSymmetry
    jugglinglab.notation.MHNPattern fromParameters(jugglinglab.util.ParameterList) -> fromParameters
    java.lang.String toString() -> toString
    void buildJugglingMatrix() -> buildJugglingMatrix
    void findMasterThrows() -> findMasterThrows
    void assignPaths() -> assignPaths
    void addThrowSources() -> addThrowSources
    void setCatchOrder() -> setCatchOrder
    boolean isCatchOrderIncorrect(jugglinglab.notation.MHNThrow,jugglinglab.notation.MHNThrow) -> isCatchOrderIncorrect
    void findDwellWindows() -> findDwellWindows
    jugglinglab.jml.JMLPattern asJMLPattern() -> asJMLPattern
    double calcBps() -> calcBps
    void addPropsToJML(jugglinglab.jml.JMLPattern) -> addPropsToJML
    void addSymmetriesToJML(jugglinglab.jml.JMLPattern) -> addSymmetriesToJML
    void findCatchThrowTimes() -> findCatchThrowTimes
    void addPrimaryEventsToJML(jugglinglab.jml.JMLPattern,boolean[][],boolean[]) -> addPrimaryEventsToJML
    void addJugglerPositionsToJML(jugglinglab.jml.JMLPattern) -> addJugglerPositionsToJML
    void addEventsForUntouchedHandsToJML(jugglinglab.jml.JMLPattern,boolean[][]) -> addEventsForUntouchedHandsToJML
    void addEventsForUntouchedPathsToJML(jugglinglab.jml.JMLPattern,boolean[]) -> addEventsForUntouchedPathsToJML
    void addEventsForGapsToJML(jugglinglab.jml.JMLPattern) -> addEventsForGapsToJML
    void addLocationsForIncompleteEventsToJML(jugglinglab.jml.JMLPattern) -> addLocationsForIncompleteEventsToJML
    void addMissingHoldsToJML(jugglinglab.jml.JMLPattern) -> addMissingHoldsToJML
    void <clinit>() -> <clinit>
jugglinglab.notation.MHNSymmetry -> jugglinglab.notation.MHNSymmetry:
    int type -> type
    int numjugglers -> numjugglers
    jugglinglab.util.Permutation jugglerperm -> jugglerperm
    int delay -> delay
    void <init>(int,int,java.lang.String,int) -> <init>
    int getType() -> getType
    void setType(int) -> setType
    int getNumberOfJugglers() -> getNumberOfJugglers
    jugglinglab.util.Permutation getJugglerPerm() -> getJugglerPerm
    void setJugglerPerm(int,java.lang.String) -> setJugglerPerm
    int getDelay() -> getDelay
    void setDelay(int) -> setDelay
jugglinglab.notation.MHNThrow -> jugglinglab.notation.MHNThrow:
    int juggler -> juggler
    int hand -> hand
    int index -> index
    int slot -> slot
    int targetjuggler -> targetjuggler
    int targethand -> targethand
    int targetindex -> targetindex
    int targetslot -> targetslot
    java.lang.String mod -> mod
    jugglinglab.notation.MHNThrow master -> master
    jugglinglab.notation.MHNThrow source -> source
    jugglinglab.notation.MHNThrow target -> target
    int pathnum -> pathnum
    boolean catching -> catching
    int catchnum -> catchnum
    int dwellwindow -> dwellwindow
    double throwtime -> throwtime
    double catchtime -> catchtime
    int handsindex -> handsindex
    void <init>() -> <init>
    void <init>(int,int,int,int,int,int,int,int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    boolean isZero() -> isZero
    int throwValue() -> throwValue
    boolean isThrownOne() -> isThrownOne
jugglinglab.notation.Pattern -> jugglinglab.notation.Pattern:
    java.lang.String[] builtinNotations -> builtinNotations
    void <init>() -> <init>
    jugglinglab.notation.Pattern newPattern(java.lang.String) -> newPattern
    java.lang.String getNotationName() -> getNotationName
    jugglinglab.notation.Pattern fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
    jugglinglab.jml.JMLPattern asJMLPattern() -> asJMLPattern
    void <clinit>() -> <clinit>
jugglinglab.notation.SiteswapPattern -> jugglinglab.notation.SiteswapPattern:
    boolean oddperiod -> oddperiod
    boolean has_hands_specifier -> has_hands_specifier
    boolean[] right_on_even -> right_on_even
    void <init>() -> <init>
    java.lang.String getNotationName() -> getNotationName
    jugglinglab.notation.SiteswapPattern fromString(java.lang.String) -> fromString
    jugglinglab.notation.SiteswapPattern fromParameters(jugglinglab.util.ParameterList) -> fromParameters
    int getNorepPeriod() -> getNorepPeriod
    void parseSiteswapNotation() -> parseSiteswapNotation
    void doFirstPass(jugglinglab.notation.ssparser.SiteswapTreeItem) -> doFirstPass
    void doSecondPass(jugglinglab.notation.ssparser.SiteswapTreeItem,boolean,int) -> doSecondPass
    void resolveModifiers() -> resolveModifiers
    jugglinglab.notation.MHNPattern fromParameters(jugglinglab.util.ParameterList) -> fromParameters
    jugglinglab.notation.Pattern fromString(java.lang.String) -> fromString
jugglinglab.notation.ssparser.ParseException -> jugglinglab.notation.ssparser.a:
    jugglinglab.notation.ssparser.Token currentToken -> a
    void <init>(jugglinglab.notation.ssparser.Token,int[][],java.lang.String[]) -> <init>
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String initialise(jugglinglab.notation.ssparser.Token,int[][],java.lang.String[]) -> a
    java.lang.String add_escapes(java.lang.String) -> a
jugglinglab.notation.ssparser.SimpleCharStream -> jugglinglab.notation.ssparser.SimpleCharStream:
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void <init>(java.io.Reader,int,int,int) -> <init>
    void <init>(java.io.Reader,int,int) -> <init>
    java.lang.String GetImage() -> GetImage
jugglinglab.notation.ssparser.SiteswapParser -> jugglinglab.notation.ssparser.SiteswapParser:
    int jugglers -> jugglers
    int current_juggler -> current_juggler
    int current_beat -> current_beat
    int current_beat_sub -> current_beat_sub
    jugglinglab.notation.ssparser.SiteswapParserTokenManager token_source -> token_source
    jugglinglab.notation.ssparser.SimpleCharStream jj_input_stream -> jj_input_stream
    jugglinglab.notation.ssparser.Token token -> token
    jugglinglab.notation.ssparser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    jugglinglab.notation.ssparser.Token jj_scanpos -> jj_scanpos
    jugglinglab.notation.ssparser.Token jj_lastpos -> jj_lastpos
    int jj_la -> jj_la
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    jugglinglab.notation.ssparser.SiteswapParser$JJCalls[] jj_2_rtns -> jj_2_rtns
    boolean jj_rescan -> jj_rescan
    int jj_gc -> jj_gc
    jugglinglab.notation.ssparser.SiteswapParser$LookaheadSuccess jj_ls -> jj_ls
    java.util.List jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    int[] jj_lasttokens -> jj_lasttokens
    int jj_endpos -> jj_endpos
    jugglinglab.notation.ssparser.SiteswapTreeItem parsePattern(java.lang.String) -> parsePattern
    jugglinglab.notation.ssparser.SiteswapTreeItem MakeTree() -> MakeTree
    jugglinglab.notation.ssparser.SiteswapTreeItem Pattern() -> Pattern
    jugglinglab.notation.ssparser.SiteswapTreeItem GroupedPattern() -> GroupedPattern
    jugglinglab.notation.ssparser.SiteswapTreeItem SoloSequence() -> SoloSequence
    jugglinglab.notation.ssparser.SiteswapTreeItem SoloPairedThrow() -> SoloPairedThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem SoloMultiThrow() -> SoloMultiThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem SoloSingleThrow() -> SoloSingleThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem SoloHandSpecifier() -> SoloHandSpecifier
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingSequence() -> PassingSequence
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingGroup() -> PassingGroup
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingThrows() -> PassingThrows
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingPairedThrow() -> PassingPairedThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingMultiThrow() -> PassingMultiThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingSingleThrow() -> PassingSingleThrow
    jugglinglab.notation.ssparser.SiteswapTreeItem PassingHandSpecifier() -> PassingHandSpecifier
    int Number() -> Number
    int Wildcard() -> Wildcard
    java.lang.String Modifier() -> Modifier
    boolean jj_2_1(int) -> jj_2_1
    boolean jj_2_2(int) -> jj_2_2
    boolean jj_2_3(int) -> jj_2_3
    boolean jj_3R_74() -> jj_3R_74
    boolean jj_3R_84() -> jj_3R_84
    boolean jj_3R_14() -> jj_3R_14
    boolean jj_3_2() -> jj_3_2
    boolean jj_3R_73() -> jj_3R_73
    boolean jj_3R_68() -> jj_3R_68
    boolean jj_3R_79() -> jj_3R_79
    boolean jj_3R_83() -> jj_3R_83
    boolean jj_3R_82() -> jj_3R_82
    boolean jj_3R_81() -> jj_3R_81
    boolean jj_3R_77() -> jj_3R_77
    boolean jj_3R_52() -> jj_3R_52
    boolean jj_3R_80() -> jj_3R_80
    boolean jj_3R_71() -> jj_3R_71
    boolean jj_3R_21() -> jj_3R_21
    boolean jj_3R_13() -> jj_3R_13
    boolean jj_3R_70() -> jj_3R_70
    boolean jj_3_1() -> jj_3_1
    boolean jj_3R_54() -> jj_3R_54
    boolean jj_3R_44() -> jj_3R_44
    boolean jj_3R_43() -> jj_3R_43
    boolean jj_3R_42() -> jj_3R_42
    boolean jj_3R_76() -> jj_3R_76
    boolean jj_3R_45() -> jj_3R_45
    boolean jj_3R_41() -> jj_3R_41
    boolean jj_3R_29() -> jj_3R_29
    boolean jj_3R_69() -> jj_3R_69
    boolean jj_3R_30() -> jj_3R_30
    boolean jj_3R_28() -> jj_3R_28
    boolean jj_3R_40() -> jj_3R_40
    boolean jj_3R_39() -> jj_3R_39
    boolean jj_3R_20() -> jj_3R_20
    boolean jj_3R_53() -> jj_3R_53
    boolean jj_3R_35() -> jj_3R_35
    boolean jj_3R_27() -> jj_3R_27
    boolean jj_3R_34() -> jj_3R_34
    boolean jj_3R_67() -> jj_3R_67
    boolean jj_3R_66() -> jj_3R_66
    boolean jj_3R_72() -> jj_3R_72
    boolean jj_3R_64() -> jj_3R_64
    boolean jj_3R_63() -> jj_3R_63
    boolean jj_3R_65() -> jj_3R_65
    boolean jj_3R_24() -> jj_3R_24
    boolean jj_3R_62() -> jj_3R_62
    boolean jj_3R_60() -> jj_3R_60
    boolean jj_3R_58() -> jj_3R_58
    boolean jj_3R_61() -> jj_3R_61
    boolean jj_3R_57() -> jj_3R_57
    boolean jj_3R_59() -> jj_3R_59
    boolean jj_3R_56() -> jj_3R_56
    boolean jj_3R_55() -> jj_3R_55
    boolean jj_3R_49() -> jj_3R_49
    boolean jj_3R_51() -> jj_3R_51
    boolean jj_3R_46() -> jj_3R_46
    boolean jj_3R_48() -> jj_3R_48
    boolean jj_3R_50() -> jj_3R_50
    boolean jj_3R_38() -> jj_3R_38
    boolean jj_3R_47() -> jj_3R_47
    boolean jj_3R_33() -> jj_3R_33
    boolean jj_3R_19() -> jj_3R_19
    boolean jj_3R_37() -> jj_3R_37
    boolean jj_3R_36() -> jj_3R_36
    boolean jj_3R_32() -> jj_3R_32
    boolean jj_3R_31() -> jj_3R_31
    boolean jj_3R_25() -> jj_3R_25
    boolean jj_3R_16() -> jj_3R_16
    boolean jj_3R_22() -> jj_3R_22
    boolean jj_3R_18() -> jj_3R_18
    boolean jj_3R_87() -> jj_3R_87
    boolean jj_3R_26() -> jj_3R_26
    boolean jj_3R_88() -> jj_3R_88
    boolean jj_3R_15() -> jj_3R_15
    boolean jj_3R_23() -> jj_3R_23
    boolean jj_3R_86() -> jj_3R_86
    boolean jj_3R_75() -> jj_3R_75
    boolean jj_3R_85() -> jj_3R_85
    boolean jj_3R_17() -> jj_3R_17
    boolean jj_3_3() -> jj_3_3
    boolean jj_3R_78() -> jj_3R_78
    void jj_la1_init_0() -> jj_la1_init_0
    void <init>(java.io.Reader) -> <init>
    jugglinglab.notation.ssparser.Token jj_consume_token(int) -> jj_consume_token
    boolean jj_scan_token(int) -> jj_scan_token
    int jj_ntk() -> jj_ntk
    void jj_add_error_token(int,int) -> jj_add_error_token
    jugglinglab.notation.ssparser.ParseException generateParseException() -> generateParseException
    void jj_rescan_token() -> jj_rescan_token
    void jj_save(int,int) -> jj_save
    void <clinit>() -> <clinit>
jugglinglab.notation.ssparser.SiteswapParser$1 -> jugglinglab.notation.ssparser.b:
jugglinglab.notation.ssparser.SiteswapParser$JJCalls -> jugglinglab.notation.ssparser.SiteswapParser$JJCalls:
    int gen -> gen
    jugglinglab.notation.ssparser.Token first -> first
    int arg -> arg
    jugglinglab.notation.ssparser.SiteswapParser$JJCalls next -> next
    void <init>() -> <init>
jugglinglab.notation.ssparser.SiteswapParser$LookaheadSuccess -> jugglinglab.notation.ssparser.SiteswapParser$LookaheadSuccess:
    void <init>() -> <init>
    void <init>(jugglinglab.notation.ssparser.SiteswapParser$1) -> <init>
jugglinglab.notation.ssparser.SiteswapParserConstants -> jugglinglab.notation.ssparser.c:
    java.lang.String[] tokenImage -> a
    void <clinit>() -> <clinit>
jugglinglab.notation.ssparser.SiteswapParserTokenManager -> jugglinglab.notation.ssparser.SiteswapParserTokenManager:
    java.io.PrintStream debugStream -> debugStream
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    jugglinglab.notation.ssparser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    void <init>(jugglinglab.notation.ssparser.SimpleCharStream) -> <init>
    void ReInitRounds() -> ReInitRounds
    jugglinglab.notation.ssparser.Token jjFillToken() -> jjFillToken
    jugglinglab.notation.ssparser.Token getNextToken() -> getNextToken
    void jjCheckNAdd(int) -> jjCheckNAdd
    void <clinit>() -> <clinit>
jugglinglab.notation.ssparser.SiteswapTreeItem -> jugglinglab.notation.ssparser.SiteswapTreeItem:
    int type -> type
    java.util.ArrayList children -> children
    int jugglers -> jugglers
    int repeats -> repeats
    boolean switchrepeat -> switchrepeat
    int beats -> beats
    int seq_beatnum -> seq_beatnum
    int source_juggler -> source_juggler
    int value -> value
    boolean x -> x
    int dest_juggler -> dest_juggler
    java.lang.String mod -> mod
    boolean spec_left -> spec_left
    int throw_sum -> throw_sum
    int beatnum -> beatnum
    boolean left -> left
    boolean vanilla_async -> vanilla_async
    boolean sync_throw -> sync_throw
    jugglinglab.notation.ssparser.SiteswapTreeItem transition -> transition
    java.lang.String[] typenames -> typenames
    int[][] field_defined_types -> field_defined_types
    void <init>(int) -> <init>
    void addChild(jugglinglab.notation.ssparser.SiteswapTreeItem) -> addChild
    jugglinglab.notation.ssparser.SiteswapTreeItem getChild(int) -> getChild
    void removeChildren() -> removeChildren
    int getNumberOfChildren() -> getNumberOfChildren
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    boolean field_active(int,int) -> field_active
    void <clinit>() -> <clinit>
jugglinglab.notation.ssparser.Token -> jugglinglab.notation.ssparser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    jugglinglab.notation.ssparser.Token next -> next
    void <init>() -> <init>
    void <init>(int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    jugglinglab.notation.ssparser.Token newToken(int,java.lang.String) -> newToken
jugglinglab.notation.ssparser.TokenMgrError -> jugglinglab.notation.ssparser.d:
    java.lang.String addEscapes(java.lang.String) -> a
    java.lang.String getMessage() -> getMessage
    void <init>() -> <init>
    void <init>(java.lang.String,int) -> <init>
    void <init>(boolean,int,int,int,java.lang.String,char,int) -> <init>
jugglinglab.path.BouncePath -> jugglinglab.path.a:
    double bx -> a
    double by -> b
    double[] az -> c
    double[] bz -> d
    double[] cz -> e
    double[] endtime -> f
    int bounces -> g
    boolean forced -> h
    boolean hyper -> i
    double bounceplane -> j
    double g -> k
    double bouncefracsqrt -> l
    int numbounces -> m
    void <init>() -> <init>
    void initPath(java.lang.String) -> initPath
    void calcPath() -> calcPath
    int solveBounceEquation(int,double,double[],boolean[]) -> a
    boolean isFeasibleDuration(double) -> a
    double getMinDuration() -> getMinDuration
    jugglinglab.util.Coordinate getStartVelocity() -> getStartVelocity
    jugglinglab.util.Coordinate getEndVelocity() -> getEndVelocity
    double evalPolynomial(double[],int,double) -> a
    double bracketOpenInterval(double[],int,double,boolean) -> a
    double findRoot(double[],int,double,double) -> a
    int findRealRootsPolynomial(double[],int,double[]) -> a
jugglinglab.path.Path -> jugglinglab.path.Path:
    double start_time -> start_time
    double end_time -> end_time
    jugglinglab.util.Coordinate start_coord -> start_coord
    jugglinglab.util.Coordinate end_coord -> end_coord
    java.lang.String[] builtinPaths -> builtinPaths
    void <init>() -> <init>
    jugglinglab.path.Path newPath(java.lang.String) -> newPath
    void setStart(jugglinglab.util.Coordinate,double) -> setStart
    void setEnd(jugglinglab.util.Coordinate,double) -> setEnd
    double getDuration() -> getDuration
    double getMinDuration() -> getMinDuration
    void initPath(java.lang.String) -> initPath
    void calcPath() -> calcPath
    jugglinglab.util.Coordinate getStartVelocity() -> getStartVelocity
    jugglinglab.util.Coordinate getEndVelocity() -> getEndVelocity
    void <clinit>() -> <clinit>
jugglinglab.path.TossPath -> jugglinglab.path.TossPath:
    double bx -> bx
    double cx -> cx
    double by -> by
    double cy -> cy
    double az -> az
    double bz -> bz
    double cz -> cz
    double g -> g
    void <init>() -> <init>
    void initPath(java.lang.String) -> initPath
    void calcPath() -> calcPath
    jugglinglab.util.Coordinate getStartVelocity() -> getStartVelocity
    jugglinglab.util.Coordinate getEndVelocity() -> getEndVelocity
jugglinglab.prop.BallProp -> jugglinglab.prop.BallProp:
    java.lang.String[] colornames -> colornames
    alternatives.Color[] colorvals -> colorvals
    double diam -> diam
    int colornum -> colornum
    alternatives.Color color -> color
    boolean highlight -> highlight
    void <init>() -> <init>
    void init(java.lang.String) -> init
    void <clinit>() -> <clinit>
jugglinglab.prop.Prop -> jugglinglab.prop.Prop:
    java.lang.String initString -> initString
    java.lang.String[] builtinProps -> builtinProps
    void <init>() -> <init>
    jugglinglab.prop.Prop newProp(java.lang.String) -> newProp
    void initProp(java.lang.String) -> initProp
    void init(java.lang.String) -> init
    void <clinit>() -> <clinit>
jugglinglab.util.Coordinate -> jugglinglab.util.Coordinate:
    double x -> x
    double y -> y
    double z -> z
    void <init>() -> <init>
    void <init>(double,double,double) -> <init>
    void <init>(jugglinglab.util.Coordinate) -> <init>
    void setCoordinate(double,double,double) -> setCoordinate
    double getIndex(int) -> getIndex
    void setIndex(int,double) -> setIndex
    jugglinglab.util.Coordinate max(jugglinglab.util.Coordinate,jugglinglab.util.Coordinate) -> max
    jugglinglab.util.Coordinate min(jugglinglab.util.Coordinate,jugglinglab.util.Coordinate) -> min
    java.lang.String toString() -> toString
jugglinglab.util.JLFunc -> jugglinglab.util.JLFunc:
    java.text.NumberFormat nf -> nf
    void <init>() -> <init>
    java.lang.String expandRepeats(java.lang.String) -> expandRepeats
    void addExpansionToBuffer(java.lang.String,java.lang.StringBuffer) -> addExpansionToBuffer
    int[] tryParseRepeat(java.lang.String,int) -> tryParseRepeat
    java.text.NumberFormat nf() -> nf
    double parseDouble(java.lang.String) -> parseDouble
    java.lang.String toStringRounded(double,int) -> toStringRounded
jugglinglab.util.JuggleException -> jugglinglab.util.a:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
jugglinglab.util.JuggleExceptionInternal -> jugglinglab.util.b:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
jugglinglab.util.JuggleExceptionUser -> jugglinglab.util.c:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
jugglinglab.util.ParameterList -> jugglinglab.util.ParameterList:
    int size -> size
    java.util.ArrayList names -> names
    java.util.ArrayList values -> values
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    boolean addParameter(java.lang.String,java.lang.String) -> addParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String removeParameter(java.lang.String) -> removeParameter
    java.lang.String getParameterName(int) -> getParameterName
    java.lang.String getParameterValue(int) -> getParameterValue
    int getNumberOfParameters() -> getNumberOfParameters
    void readParameters(java.lang.String) -> readParameters
    java.lang.String toString() -> toString
    void errorIfParametersLeft() -> errorIfParametersLeft
jugglinglab.util.Permutation -> jugglinglab.util.Permutation:
    int size -> size
    int[] mapping -> mapping
    boolean reverses -> reverses
    void <init>(int,boolean) -> <init>
    void <init>(int,int[],boolean) -> <init>
    void <init>(int,java.lang.String,boolean) -> <init>
    java.lang.String toString() -> toString
    java.lang.String toString(boolean) -> toString
    java.lang.String convertReverse(int) -> convertReverse
    int getSize() -> getSize
    boolean hasReverses() -> hasReverses
    boolean equals(jugglinglab.util.Permutation) -> equals
    int getMapping(int) -> getMapping
    int getMapping(int,int) -> getMapping
    jugglinglab.util.Permutation apply(jugglinglab.util.Permutation) -> apply
    int getInverseMapping(int) -> getInverseMapping
    jugglinglab.util.Permutation getInverse() -> getInverse
    int lcm(int,int) -> lcm
    int getOrder() -> getOrder
    int getOrder(int) -> getOrder
    int[] getCycle(int) -> getCycle
org.apache.commons.math3.exception.DimensionMismatchException -> org.apache.commons.math3.a.a:
    void <init>(org.apache.commons.math3.exception.util.Localizable,int,int) -> <init>
    void <init>(int,int) -> <init>
org.apache.commons.math3.exception.MathIllegalArgumentException -> org.apache.commons.math3.a.b:
    org.apache.commons.math3.exception.util.ExceptionContext context -> a
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> <init>
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathIllegalNumberException -> org.apache.commons.math3.a.c:
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) -> <init>
    void <clinit>() -> <clinit>
org.apache.commons.math3.exception.MathIllegalStateException -> org.apache.commons.math3.a.d:
    org.apache.commons.math3.exception.util.ExceptionContext context -> a
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> <init>
    void <init>() -> <init>
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.MathUnsupportedOperationException -> org.apache.commons.math3.a.e:
    org.apache.commons.math3.exception.util.ExceptionContext context -> a
    void <init>() -> <init>
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> <init>
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
org.apache.commons.math3.exception.NoDataException -> org.apache.commons.math3.a.f:
    void <init>() -> <init>
    void <init>(org.apache.commons.math3.exception.util.Localizable) -> <init>
org.apache.commons.math3.exception.NullArgumentException -> org.apache.commons.math3.a.g:
    void <init>() -> <init>
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> <init>
org.apache.commons.math3.exception.OutOfRangeException -> org.apache.commons.math3.a.h:
    void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number) -> <init>
org.apache.commons.math3.exception.util.ArgUtils -> org.apache.commons.math3.a.a.a:
    java.lang.Object[] flatten(java.lang.Object[]) -> a
org.apache.commons.math3.exception.util.ExceptionContext -> org.apache.commons.math3.a.a.b:
    java.util.List msgPatterns -> a
    java.util.List msgArguments -> b
    void <init>(java.lang.Throwable) -> <init>
    void addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) -> a
    java.lang.String getMessage() -> a
    java.lang.String getLocalizedMessage() -> b
    java.lang.String buildMessage(java.util.Locale,java.lang.String) -> a
org.apache.commons.math3.exception.util.Localizable -> org.apache.commons.math3.a.a.c:
    java.lang.String getLocalizedString(java.util.Locale) -> a
org.apache.commons.math3.exception.util.LocalizedFormats -> org.apache.commons.math3.a.a.d:
    org.apache.commons.math3.exception.util.LocalizedFormats ARGUMENT_OUTSIDE_DOMAIN -> o
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SIZE_EXCEEDS_MAX_VARIABLES -> p
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1 -> q
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_SUMS_TO_ZERO -> r
    org.apache.commons.math3.exception.util.LocalizedFormats ASSYMETRIC_EIGEN_NOT_SUPPORTED -> s
    org.apache.commons.math3.exception.util.LocalizedFormats AT_LEAST_ONE_COLUMN -> a
    org.apache.commons.math3.exception.util.LocalizedFormats AT_LEAST_ONE_ROW -> b
    org.apache.commons.math3.exception.util.LocalizedFormats BANDWIDTH -> t
    org.apache.commons.math3.exception.util.LocalizedFormats BESSEL_FUNCTION_BAD_ARGUMENT -> u
    org.apache.commons.math3.exception.util.LocalizedFormats BESSEL_FUNCTION_FAILED_CONVERGENCE -> v
    org.apache.commons.math3.exception.util.LocalizedFormats BINOMIAL_INVALID_PARAMETERS_ORDER -> w
    org.apache.commons.math3.exception.util.LocalizedFormats BINOMIAL_NEGATIVE_PARAMETER -> x
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS -> y
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_0TH_ROOT_OF_UNITY -> z
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA -> A
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA -> B
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N -> C
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS -> D
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR -> E
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_COMPLEX -> F
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR -> G
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_FORMAT_OBJECT_TO_FRACTION -> H
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS -> I
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR -> J
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_RETRIEVE_AT_NEGATIVE_INDEX -> K
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_SET_AT_NEGATIVE_INDEX -> L
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY -> M
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_TRANSFORM_TO_DOUBLE -> N
    org.apache.commons.math3.exception.util.LocalizedFormats CARDAN_ANGLES_SINGULARITY -> O
    org.apache.commons.math3.exception.util.LocalizedFormats CLASS_DOESNT_IMPLEMENT_COMPARABLE -> P
    org.apache.commons.math3.exception.util.LocalizedFormats CLOSE_VERTICES -> Q
    org.apache.commons.math3.exception.util.LocalizedFormats CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT -> R
    org.apache.commons.math3.exception.util.LocalizedFormats COLUMN_INDEX_OUT_OF_RANGE -> S
    org.apache.commons.math3.exception.util.LocalizedFormats COLUMN_INDEX -> c
    org.apache.commons.math3.exception.util.LocalizedFormats CONSTRAINT -> T
    org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_INFINITY_DIVERGENCE -> U
    org.apache.commons.math3.exception.util.LocalizedFormats CONTINUED_FRACTION_NAN_DIVERGENCE -> V
    org.apache.commons.math3.exception.util.LocalizedFormats CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR -> W
    org.apache.commons.math3.exception.util.LocalizedFormats CONTRACTION_CRITERIA_SMALLER_THAN_ONE -> X
    org.apache.commons.math3.exception.util.LocalizedFormats CONVERGENCE_FAILED -> Y
    org.apache.commons.math3.exception.util.LocalizedFormats CROSSING_BOUNDARY_LOOPS -> Z
    org.apache.commons.math3.exception.util.LocalizedFormats CROSSOVER_RATE -> aa
    org.apache.commons.math3.exception.util.LocalizedFormats CUMULATIVE_PROBABILITY_RETURNED_NAN -> ab
    org.apache.commons.math3.exception.util.LocalizedFormats DIFFERENT_ROWS_LENGTHS -> ac
    org.apache.commons.math3.exception.util.LocalizedFormats DIFFERENT_ORIG_AND_PERMUTED_DATA -> ad
    org.apache.commons.math3.exception.util.LocalizedFormats DIGEST_NOT_INITIALIZED -> ae
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_2x2 -> af
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH_SIMPLE -> d
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSIONS_MISMATCH -> ag
    org.apache.commons.math3.exception.util.LocalizedFormats DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN -> ah
    org.apache.commons.math3.exception.util.LocalizedFormats DISTRIBUTION_NOT_LOADED -> ai
    org.apache.commons.math3.exception.util.LocalizedFormats DUPLICATED_ABSCISSA_DIVISION_BY_ZERO -> aj
    org.apache.commons.math3.exception.util.LocalizedFormats EDGE_CONNECTED_TO_ONE_FACET -> ak
    org.apache.commons.math3.exception.util.LocalizedFormats ELITISM_RATE -> al
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_CLUSTER_IN_K_MEANS -> am
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_INTERPOLATION_SAMPLE -> an
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY -> ao
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_SELECTED_COLUMN_INDEX_ARRAY -> ap
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_SELECTED_ROW_INDEX_ARRAY -> aq
    org.apache.commons.math3.exception.util.LocalizedFormats EMPTY_STRING_FOR_IMAGINARY_CHARACTER -> ar
    org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL -> as
    org.apache.commons.math3.exception.util.LocalizedFormats EQUAL_VERTICES_IN_SIMPLEX -> at
    org.apache.commons.math3.exception.util.LocalizedFormats EULER_ANGLES_SINGULARITY -> au
    org.apache.commons.math3.exception.util.LocalizedFormats EVALUATION -> av
    org.apache.commons.math3.exception.util.LocalizedFormats EXPANSION_FACTOR_SMALLER_THAN_ONE -> aw
    org.apache.commons.math3.exception.util.LocalizedFormats FACET_ORIENTATION_MISMATCH -> ax
    org.apache.commons.math3.exception.util.LocalizedFormats FACTORIAL_NEGATIVE_PARAMETER -> ay
    org.apache.commons.math3.exception.util.LocalizedFormats FAILED_BRACKETING -> az
    org.apache.commons.math3.exception.util.LocalizedFormats FAILED_FRACTION_CONVERSION -> aA
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_COLUMNS_NOT_INITIALIZED_YET -> e
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_ELEMENT_NOT_ZERO -> aB
    org.apache.commons.math3.exception.util.LocalizedFormats FIRST_ROWS_NOT_INITIALIZED_YET -> f
    org.apache.commons.math3.exception.util.LocalizedFormats FRACTION_CONVERSION_OVERFLOW -> aC
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION_NOT_DIFFERENTIABLE -> aD
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION_NOT_POLYNOMIAL -> aE
    org.apache.commons.math3.exception.util.LocalizedFormats GCD_OVERFLOW_32_BITS -> aF
    org.apache.commons.math3.exception.util.LocalizedFormats GCD_OVERFLOW_64_BITS -> aG
    org.apache.commons.math3.exception.util.LocalizedFormats HOLE_BETWEEN_MODELS_TIME_RANGES -> aH
    org.apache.commons.math3.exception.util.LocalizedFormats ILL_CONDITIONED_OPERATOR -> aI
    org.apache.commons.math3.exception.util.LocalizedFormats INCONSISTENT_STATE_AT_2_PI_WRAPPING -> aJ
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_LARGER_THAN_MAX -> aK
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_NOT_POSITIVE -> aL
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX_OUT_OF_RANGE -> aM
    org.apache.commons.math3.exception.util.LocalizedFormats INDEX -> g
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_FINITE_NUMBER -> aN
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_BOUND -> aO
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_ELEMENT -> aP
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_ARRAY_ELEMENT -> aQ
    org.apache.commons.math3.exception.util.LocalizedFormats INFINITE_VALUE_CONVERSION -> aR
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_CAPACITY_NOT_POSITIVE -> aS
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_COLUMN_AFTER_FINAL_COLUMN -> aT
    org.apache.commons.math3.exception.util.LocalizedFormats INITIAL_ROW_AFTER_FINAL_ROW -> aU
    org.apache.commons.math3.exception.util.LocalizedFormats INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE -> aV
    org.apache.commons.math3.exception.util.LocalizedFormats INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES -> aW
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DATA -> aX
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DATA_FOR_T_STATISTIC -> aY
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_DIMENSION -> aZ
    org.apache.commons.math3.exception.util.LocalizedFormats DIMENSION -> ba
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE -> bb
    org.apache.commons.math3.exception.util.LocalizedFormats INSUFFICIENT_ROWS_AND_COLUMNS -> bc
    org.apache.commons.math3.exception.util.LocalizedFormats INTEGRATION_METHOD_NEEDS_AT_LEAST_TWO_PREVIOUS_POINTS -> bd
    org.apache.commons.math3.exception.util.LocalizedFormats INTERNAL_ERROR -> be
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_DIGIT -> bf
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BINARY_CHROMOSOME -> bg
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_BRACKETING_PARAMETERS -> bh
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_FIXED_LENGTH_CHROMOSOME -> bi
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_IMPLEMENTATION -> bj
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS -> bk
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_ITERATIONS_LIMITS -> bl
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_MAX_ITERATIONS -> bm
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_DATA_REGRESSION -> bn
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_REGRESSION_ARRAY -> bo
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_REGRESSION_OBSERVATION -> bp
    org.apache.commons.math3.exception.util.LocalizedFormats INVALID_ROUNDING_METHOD -> bq
    org.apache.commons.math3.exception.util.LocalizedFormats ITERATOR_EXHAUSTED -> br
    org.apache.commons.math3.exception.util.LocalizedFormats ITERATIONS -> bs
    org.apache.commons.math3.exception.util.LocalizedFormats LCM_OVERFLOW_32_BITS -> bt
    org.apache.commons.math3.exception.util.LocalizedFormats LCM_OVERFLOW_64_BITS -> bu
    org.apache.commons.math3.exception.util.LocalizedFormats LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE -> bv
    org.apache.commons.math3.exception.util.LocalizedFormats LOESS_EXPECTS_AT_LEAST_ONE_POINT -> bw
    org.apache.commons.math3.exception.util.LocalizedFormats LOWER_BOUND_NOT_BELOW_UPPER_BOUND -> bx
    org.apache.commons.math3.exception.util.LocalizedFormats LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT -> by
    org.apache.commons.math3.exception.util.LocalizedFormats MAP_MODIFIED_WHILE_ITERATING -> bz
    org.apache.commons.math3.exception.util.LocalizedFormats MULTISTEP_STARTER_STOPPED_EARLY -> bA
    org.apache.commons.math3.exception.util.LocalizedFormats EVALUATIONS -> bB
    org.apache.commons.math3.exception.util.LocalizedFormats MAX_COUNT_EXCEEDED -> bC
    org.apache.commons.math3.exception.util.LocalizedFormats MAX_ITERATIONS_EXCEEDED -> bD
    org.apache.commons.math3.exception.util.LocalizedFormats MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION -> bE
    org.apache.commons.math3.exception.util.LocalizedFormats MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS -> bF
    org.apache.commons.math3.exception.util.LocalizedFormats MUTATION_RATE -> bG
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_ELEMENT_AT_INDEX -> bH
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_VALUE_CONVERSION -> bI
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_BRIGHTNESS_EXPONENT -> bJ
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_COMPLEX_MODULE -> bK
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_ELEMENT_AT_2D_INDEX -> bL
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_ELEMENT_AT_INDEX -> bM
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_NUMBER_OF_SUCCESSES -> bN
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SUCCESSES -> bO
    org.apache.commons.math3.exception.util.LocalizedFormats NEGATIVE_NUMBER_OF_TRIALS -> bP
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_INTERPOLATION_POINTS -> bQ
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_TRIALS -> bR
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_CONVEX -> bS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_CONVEX_HYPERPLANES -> bT
    org.apache.commons.math3.exception.util.LocalizedFormats ROBUSTNESS_ITERATIONS -> bU
    org.apache.commons.math3.exception.util.LocalizedFormats START_POSITION -> bV
    org.apache.commons.math3.exception.util.LocalizedFormats NON_CONVERGENT_CONTINUED_FRACTION -> bW
    org.apache.commons.math3.exception.util.LocalizedFormats NON_INVERTIBLE_TRANSFORM -> bX
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_MICROSPHERE_ELEMENTS -> bY
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_POLYNOMIAL_DEGREE -> bZ
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_ABSCISSA -> ca
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_ORDINATE -> cb
    org.apache.commons.math3.exception.util.LocalizedFormats NON_REAL_FINITE_WEIGHT -> cc
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SQUARE_MATRIX -> h
    org.apache.commons.math3.exception.util.LocalizedFormats NORM -> cd
    org.apache.commons.math3.exception.util.LocalizedFormats NORMALIZE_INFINITE -> ce
    org.apache.commons.math3.exception.util.LocalizedFormats NORMALIZE_NAN -> cf
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ADDITION_COMPATIBLE_MATRICES -> cg
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_DECREASING_NUMBER_OF_POINTS -> ch
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_DECREASING_SEQUENCE -> ci
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS -> cj
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION -> ck
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_INCREASING_NUMBER_OF_POINTS -> cl
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_INCREASING_SEQUENCE -> cm
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_MULTIPLICATION_COMPATIBLE_MATRICES -> cn
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_DEFINITE_MATRIX -> co
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_DEFINITE_MATRIX -> cp
    org.apache.commons.math3.exception.util.LocalizedFormats NON_POSITIVE_DEFINITE_OPERATOR -> cq
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SELF_ADJOINT_OPERATOR -> cr
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SQUARE_OPERATOR -> cs
    org.apache.commons.math3.exception.util.LocalizedFormats DEGREES_OF_FREEDOM -> ct
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_DEGREES_OF_FREEDOM -> cu
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_ELEMENT_AT_INDEX -> cv
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_EXPONENT -> cw
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE -> cx
    org.apache.commons.math3.exception.util.LocalizedFormats BASE -> cy
    org.apache.commons.math3.exception.util.LocalizedFormats EXPONENT -> cz
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_LENGTH -> cA
    org.apache.commons.math3.exception.util.LocalizedFormats LENGTH -> cB
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_MEAN -> cC
    org.apache.commons.math3.exception.util.LocalizedFormats MEAN -> cD
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_NUMBER_OF_SAMPLES -> cE
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SAMPLES -> cF
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_PERMUTATION -> cG
    org.apache.commons.math3.exception.util.LocalizedFormats PERMUTATION_SIZE -> cH
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_POISSON_MEAN -> cI
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_POPULATION_SIZE -> cJ
    org.apache.commons.math3.exception.util.LocalizedFormats POPULATION_SIZE -> cK
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_ROW_DIMENSION -> cL
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SAMPLE_SIZE -> cM
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SCALE -> cN
    org.apache.commons.math3.exception.util.LocalizedFormats SCALE -> cO
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_SHAPE -> cP
    org.apache.commons.math3.exception.util.LocalizedFormats SHAPE -> cQ
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_STANDARD_DEVIATION -> cR
    org.apache.commons.math3.exception.util.LocalizedFormats STANDARD_DEVIATION -> cS
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_UPPER_BOUND -> cT
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POSITIVE_WINDOW_SIZE -> cU
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO -> cV
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO_CONSIDER_PADDING -> cW
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_POWER_OF_TWO_PLUS_ONE -> cX
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS -> cY
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_DECREASING_SEQUENCE -> cZ
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_KNOT_VALUES -> da
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS -> db
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_STRICTLY_INCREASING_SEQUENCE -> dc
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SUBTRACTION_COMPATIBLE_MATRICES -> dd
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SUPPORTED_IN_DIMENSION_N -> de
    org.apache.commons.math3.exception.util.LocalizedFormats NOT_SYMMETRIC_MATRIX -> df
    org.apache.commons.math3.exception.util.LocalizedFormats NON_SYMMETRIC_MATRIX -> dg
    org.apache.commons.math3.exception.util.LocalizedFormats NO_BIN_SELECTED -> dh
    org.apache.commons.math3.exception.util.LocalizedFormats NO_CONVERGENCE_WITH_ANY_START_POINT -> di
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DATA -> i
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DEGREES_OF_FREEDOM -> dj
    org.apache.commons.math3.exception.util.LocalizedFormats NO_DENSITY_FOR_THIS_DISTRIBUTION -> dk
    org.apache.commons.math3.exception.util.LocalizedFormats NO_FEASIBLE_SOLUTION -> dl
    org.apache.commons.math3.exception.util.LocalizedFormats NO_OPTIMUM_COMPUTED_YET -> dm
    org.apache.commons.math3.exception.util.LocalizedFormats NO_REGRESSORS -> dn
    org.apache.commons.math3.exception.util.LocalizedFormats NO_RESULT_AVAILABLE -> do
    org.apache.commons.math3.exception.util.LocalizedFormats NO_SUCH_MATRIX_ENTRY -> dp
    org.apache.commons.math3.exception.util.LocalizedFormats NAN_NOT_ALLOWED -> dq
    org.apache.commons.math3.exception.util.LocalizedFormats NULL_NOT_ALLOWED -> j
    org.apache.commons.math3.exception.util.LocalizedFormats ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED -> dr
    org.apache.commons.math3.exception.util.LocalizedFormats COVARIANCE_MATRIX -> ds
    org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR -> dt
    org.apache.commons.math3.exception.util.LocalizedFormats DENOMINATOR_FORMAT -> du
    org.apache.commons.math3.exception.util.LocalizedFormats FRACTION -> dv
    org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION -> dw
    org.apache.commons.math3.exception.util.LocalizedFormats IMAGINARY_FORMAT -> dx
    org.apache.commons.math3.exception.util.LocalizedFormats INPUT_ARRAY -> dy
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR -> dz
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR_FORMAT -> dA
    org.apache.commons.math3.exception.util.LocalizedFormats OBJECT_TRANSFORMATION -> dB
    org.apache.commons.math3.exception.util.LocalizedFormats REAL_FORMAT -> dC
    org.apache.commons.math3.exception.util.LocalizedFormats WHOLE_FORMAT -> dD
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_LARGE -> dE
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL -> dF
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_LARGE_BOUND_EXCLUDED -> dG
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_TOO_SMALL_BOUND_EXCLUDED -> dH
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE -> dI
    org.apache.commons.math3.exception.util.LocalizedFormats NUMERATOR_OVERFLOW_AFTER_MULTIPLY -> dJ
    org.apache.commons.math3.exception.util.LocalizedFormats N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED -> dK
    org.apache.commons.math3.exception.util.LocalizedFormats OBSERVED_COUNTS_ALL_ZERO -> dL
    org.apache.commons.math3.exception.util.LocalizedFormats OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY -> dM
    org.apache.commons.math3.exception.util.LocalizedFormats BOBYQA_BOUND_DIFFERENCE_CONDITION -> dN
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUNDS_QUANTILE_VALUE -> dO
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUNDS_CONFIDENCE_LEVEL -> dP
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_BOUND_SIGNIFICANCE_LEVEL -> dQ
    org.apache.commons.math3.exception.util.LocalizedFormats SIGNIFICANCE_LEVEL -> dR
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_ORDER_ABSCISSA_ARRAY -> dS
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_PLANE -> dT
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_ROOT_OF_UNITY_INDEX -> dU
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE -> dV
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_SIMPLE -> dW
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_LEFT -> dX
    org.apache.commons.math3.exception.util.LocalizedFormats OUT_OF_RANGE_RIGHT -> dY
    org.apache.commons.math3.exception.util.LocalizedFormats OUTLINE_BOUNDARY_LOOP_OPEN -> dZ
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW -> ea
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_FRACTION -> eb
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_ADDITION -> ec
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_SUBTRACTION -> ed
    org.apache.commons.math3.exception.util.LocalizedFormats OVERFLOW_IN_MULTIPLICATION -> ee
    org.apache.commons.math3.exception.util.LocalizedFormats PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD -> ef
    org.apache.commons.math3.exception.util.LocalizedFormats PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD -> eg
    org.apache.commons.math3.exception.util.LocalizedFormats PERMUTATION_EXCEEDS_N -> eh
    org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL -> ei
    org.apache.commons.math3.exception.util.LocalizedFormats POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS -> ej
    org.apache.commons.math3.exception.util.LocalizedFormats POPULATION_LIMIT_NOT_POSITIVE -> ek
    org.apache.commons.math3.exception.util.LocalizedFormats POWER_NEGATIVE_PARAMETERS -> el
    org.apache.commons.math3.exception.util.LocalizedFormats PROPAGATION_DIRECTION_MISMATCH -> em
    org.apache.commons.math3.exception.util.LocalizedFormats RANDOMKEY_MUTATION_WRONG_CLASS -> en
    org.apache.commons.math3.exception.util.LocalizedFormats ROOTS_OF_UNITY_NOT_COMPUTED_YET -> eo
    org.apache.commons.math3.exception.util.LocalizedFormats ROTATION_MATRIX_DIMENSIONS -> ep
    org.apache.commons.math3.exception.util.LocalizedFormats ROW_INDEX_OUT_OF_RANGE -> eq
    org.apache.commons.math3.exception.util.LocalizedFormats ROW_INDEX -> k
    org.apache.commons.math3.exception.util.LocalizedFormats SAME_SIGN_AT_ENDPOINTS -> er
    org.apache.commons.math3.exception.util.LocalizedFormats SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE -> es
    org.apache.commons.math3.exception.util.LocalizedFormats SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE -> et
    org.apache.commons.math3.exception.util.LocalizedFormats SIMPLEX_NEED_ONE_POINT -> eu
    org.apache.commons.math3.exception.util.LocalizedFormats SIMPLE_MESSAGE -> ev
    org.apache.commons.math3.exception.util.LocalizedFormats SINGULAR_MATRIX -> l
    org.apache.commons.math3.exception.util.LocalizedFormats SINGULAR_OPERATOR -> ew
    org.apache.commons.math3.exception.util.LocalizedFormats SUBARRAY_ENDS_AFTER_ARRAY_END -> ex
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_LARGE_CUTOFF_SINGULAR_VALUE -> ey
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_LARGE_TOURNAMENT_ARITY -> ez
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY -> eA
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_MANY_REGRESSORS -> eB
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_COST_RELATIVE_TOLERANCE -> eC
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_INTEGRATION_INTERVAL -> eD
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_ORTHOGONALITY_TOLERANCE -> eE
    org.apache.commons.math3.exception.util.LocalizedFormats TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE -> eF
    org.apache.commons.math3.exception.util.LocalizedFormats TRUST_REGION_STEP_FAILED -> eG
    org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_CATEGORIES_REQUIRED -> eH
    org.apache.commons.math3.exception.util.LocalizedFormats TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED -> eI
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH -> eJ
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM -> eK
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS -> eL
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_ORTHOGONOLIZE_MATRIX -> eM
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN -> eN
    org.apache.commons.math3.exception.util.LocalizedFormats UNABLE_TO_SOLVE_SINGULAR_PROBLEM -> eO
    org.apache.commons.math3.exception.util.LocalizedFormats UNBOUNDED_SOLUTION -> eP
    org.apache.commons.math3.exception.util.LocalizedFormats UNKNOWN_MODE -> eQ
    org.apache.commons.math3.exception.util.LocalizedFormats UNKNOWN_PARAMETER -> eR
    org.apache.commons.math3.exception.util.LocalizedFormats UNMATCHED_ODE_IN_EXPANDED_SET -> eS
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_PARSE_AS_TYPE -> eT
    org.apache.commons.math3.exception.util.LocalizedFormats CANNOT_PARSE -> eU
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_3D_VECTOR -> eV
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_COMPLEX_NUMBER -> eW
    org.apache.commons.math3.exception.util.LocalizedFormats UNPARSEABLE_REAL_VECTOR -> eX
    org.apache.commons.math3.exception.util.LocalizedFormats UNSUPPORTED_EXPANSION_MODE -> eY
    org.apache.commons.math3.exception.util.LocalizedFormats UNSUPPORTED_OPERATION -> m
    org.apache.commons.math3.exception.util.LocalizedFormats ARITHMETIC_EXCEPTION -> eZ
    org.apache.commons.math3.exception.util.LocalizedFormats ILLEGAL_STATE -> n
    org.apache.commons.math3.exception.util.LocalizedFormats USER_EXCEPTION -> fa
    org.apache.commons.math3.exception.util.LocalizedFormats URL_CONTAINS_NO_DATA -> fb
    org.apache.commons.math3.exception.util.LocalizedFormats VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC -> fc
    org.apache.commons.math3.exception.util.LocalizedFormats VECTOR_LENGTH_MISMATCH -> fd
    org.apache.commons.math3.exception.util.LocalizedFormats VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT -> fe
    org.apache.commons.math3.exception.util.LocalizedFormats WEIGHT_AT_LEAST_ONE_NON_ZERO -> ff
    org.apache.commons.math3.exception.util.LocalizedFormats WRONG_BLOCK_LENGTH -> fg
    org.apache.commons.math3.exception.util.LocalizedFormats WRONG_NUMBER_OF_POINTS -> fh
    org.apache.commons.math3.exception.util.LocalizedFormats NUMBER_OF_POINTS -> fi
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR -> fj
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_DENOMINATOR_IN_FRACTION -> fk
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_FRACTION_TO_DIVIDE_BY -> fl
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM -> fm
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_AXIS -> fn
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR -> fo
    org.apache.commons.math3.exception.util.LocalizedFormats ZERO_NOT_ALLOWED -> fp
    java.lang.String sourceFormat -> fq
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String getLocalizedString(java.util.Locale) -> a
    void <clinit>() -> <clinit>
org.apache.commons.math3.linear.AbstractRealMatrix -> org.apache.commons.math3.linear.AbstractRealMatrix:
    org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    void <init>() -> <init>
    double[][] getData() -> getData
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    boolean isSquare() -> isSquare
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    void <clinit>() -> <clinit>
org.apache.commons.math3.linear.AnyMatrix -> org.apache.commons.math3.linear.a:
    boolean isSquare() -> isSquare
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
org.apache.commons.math3.linear.Array2DRowRealMatrix -> org.apache.commons.math3.linear.Array2DRowRealMatrix:
    double[][] data -> data
    void <init>() -> <init>
    void <init>(double[][]) -> <init>
    double[][] getData() -> getData
    void setSubMatrix(double[][],int,int) -> setSubMatrix
    double getEntry(int,int) -> getEntry
    void setEntry(int,int,double) -> setEntry
    int getRowDimension() -> getRowDimension
    int getColumnDimension() -> getColumnDimension
    double[][] copyOut() -> copyOut
    void copyIn(double[][]) -> copyIn
org.apache.commons.math3.linear.ArrayRealVector -> org.apache.commons.math3.linear.ArrayRealVector:
    org.apache.commons.math3.linear.RealVectorFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    double[] data -> data
    void <init>() -> <init>
    void <init>(double[]) -> <init>
    void <init>(double[],boolean) -> <init>
    double getEntry(int) -> getEntry
    int getDimension() -> getDimension
    java.lang.String toString() -> toString
    boolean isNaN() -> isNaN
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
org.apache.commons.math3.linear.DecompositionSolver -> org.apache.commons.math3.linear.b:
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
org.apache.commons.math3.linear.LUDecomposition -> org.apache.commons.math3.linear.LUDecomposition:
    double[][] lu -> lu
    int[] pivot -> pivot
    boolean even -> even
    boolean singular -> singular
    org.apache.commons.math3.linear.RealMatrix cachedL -> cachedL
    org.apache.commons.math3.linear.RealMatrix cachedU -> cachedU
    org.apache.commons.math3.linear.RealMatrix cachedP -> cachedP
    void <init>(org.apache.commons.math3.linear.RealMatrix) -> <init>
    void <init>(org.apache.commons.math3.linear.RealMatrix,double) -> <init>
    org.apache.commons.math3.linear.DecompositionSolver getSolver() -> getSolver
org.apache.commons.math3.linear.LUDecomposition$1 -> org.apache.commons.math3.linear.c:
org.apache.commons.math3.linear.LUDecomposition$Solver -> org.apache.commons.math3.linear.LUDecomposition$Solver:
    double[][] lu -> lu
    int[] pivot -> pivot
    boolean singular -> singular
    void <init>(double[][],int[],boolean) -> <init>
    org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector) -> solve
    void <init>(double[][],int[],boolean,org.apache.commons.math3.linear.LUDecomposition$1) -> <init>
org.apache.commons.math3.linear.MatrixUtils -> org.apache.commons.math3.linear.d:
    void checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) -> a
    void checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) -> a
    void checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) -> b
    void <clinit>() -> <clinit>
org.apache.commons.math3.linear.NonSquareMatrixException -> org.apache.commons.math3.linear.e:
    void <init>(int,int) -> <init>
org.apache.commons.math3.linear.RealLinearOperator -> org.apache.commons.math3.linear.RealLinearOperator:
    void <init>() -> <init>
org.apache.commons.math3.linear.RealMatrix -> org.apache.commons.math3.linear.f:
    double[][] getData() -> getData
    double getEntry(int,int) -> getEntry
org.apache.commons.math3.linear.RealMatrixFormat -> org.apache.commons.math3.linear.RealMatrixFormat:
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.lang.String rowPrefix -> rowPrefix
    java.lang.String rowSuffix -> rowSuffix
    java.lang.String rowSeparator -> rowSeparator
    java.lang.String columnSeparator -> columnSeparator
    java.text.NumberFormat format -> format
    void <init>() -> <init>
    void <init>(java.text.NumberFormat) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) -> <init>
    java.text.NumberFormat getFormat() -> getFormat
    org.apache.commons.math3.linear.RealMatrixFormat getInstance() -> getInstance
    org.apache.commons.math3.linear.RealMatrixFormat getInstance(java.util.Locale) -> getInstance
    java.lang.String format(org.apache.commons.math3.linear.RealMatrix) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.commons.math3.linear.RealVector -> org.apache.commons.math3.linear.RealVector:
    void <init>() -> <init>
    int getDimension() -> getDimension
    double getEntry(int) -> getEntry
    boolean isNaN() -> isNaN
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.math3.linear.RealVectorFormat -> org.apache.commons.math3.linear.RealVectorFormat:
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.lang.String separator -> separator
    java.lang.String trimmedPrefix -> trimmedPrefix
    java.lang.String trimmedSuffix -> trimmedSuffix
    java.lang.String trimmedSeparator -> trimmedSeparator
    java.text.NumberFormat format -> format
    void <init>() -> <init>
    void <init>(java.text.NumberFormat) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) -> <init>
    org.apache.commons.math3.linear.RealVectorFormat getInstance() -> getInstance
    org.apache.commons.math3.linear.RealVectorFormat getInstance(java.util.Locale) -> getInstance
    java.lang.String format(org.apache.commons.math3.linear.RealVector) -> format
    java.lang.StringBuffer format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.commons.math3.linear.SingularMatrixException -> org.apache.commons.math3.linear.g:
    void <init>() -> <init>
org.apache.commons.math3.util.CompositeFormat -> org.apache.commons.math3.util.CompositeFormat:
    void <init>() -> <init>
    java.text.NumberFormat getDefaultNumberFormat() -> getDefaultNumberFormat
    java.text.NumberFormat getDefaultNumberFormat(java.util.Locale) -> getDefaultNumberFormat
    java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) -> formatDouble
org.apache.commons.math3.util.FastMath -> org.apache.commons.math3.util.FastMath:
    double LOG_MAX_VALUE -> LOG_MAX_VALUE
    double[][] LN_QUICK_COEF -> LN_QUICK_COEF
    double[][] LN_HI_PREC_COEF -> LN_HI_PREC_COEF
    double[] SINE_TABLE_A -> SINE_TABLE_A
    double[] SINE_TABLE_B -> SINE_TABLE_B
    double[] COSINE_TABLE_A -> COSINE_TABLE_A
    double[] COSINE_TABLE_B -> COSINE_TABLE_B
    double[] TANGENT_TABLE_A -> TANGENT_TABLE_A
    double[] TANGENT_TABLE_B -> TANGENT_TABLE_B
    long[] RECIP_2PI -> RECIP_2PI
    long[] PI_O_4_BITS -> PI_O_4_BITS
    double[] EIGHTHS -> EIGHTHS
    double[] CBRTTWO -> CBRTTWO
    void <init>() -> <init>
    double abs(double) -> abs
    void <clinit>() -> <clinit>
org.apache.commons.math3.util.MathUtils -> org.apache.commons.math3.util.MathUtils:
    void <init>() -> <init>
    int hash(double) -> hash
    int hash(double[]) -> hash
    void checkNotNull(java.lang.Object) -> checkNotNull
